#include <fstream>
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <climits>
#include <bits/stdc++.h>
#include <string>
#include <string.h>
#include <math.h>
#include <stdio.h>

#define int long long int


//https://codeforces.com/problemset/problem/862/B



using namespace std;
int add(int a,int b,int mod){
    return ((a % mod) + (b % mod) ) % mod;
}
int sub(int a,int b,int mod){
    return ((a % mod) - (b % mod) + mod) % mod;
}
int multiply(int a,int b,int mod){
    return ((a % mod) * (b % mod)) % mod;
}

void fileIO(void) {

#ifndef ONLINE_JUDGE

    freopen("Input.txt", "r", stdin);
    freopen("Output.txt", "w", stdout);

#endif

}
void fastIO(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

int n,m;
vector<int>adj[100009];
vector<int>indegree(100009);

vector<int>color(100009);
vector<bool>vis(100009);

/*
 * bfs search with levels
 * bfs can have vis and color or distance which we can
 * determine */
void bfs(int start){

    queue<int>q;
    vis[start] = true;
    q.push(start);
    color[start] = 1;
    while (!q.empty()){
        int u = q.front();
//        cout << u << " ";
        q.pop();
        for(auto e : adj[u]){
            if(!vis[e]) {
                q.push(e);
                vis[e] = 1;
                color[e] = 3 - color[u];
            }

        }
    }
}
void solve() {
    cin >> n;
    m = n-1;
    for(int i =0;i<m;i++){
        int u,v;cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
        indegree[v]++;
    }
    for(int i =1;i<=n;i++){
        if(indegree[i] == 0){
            bfs(i);
            break;
        }
    }
    int cnt1=0,cnt2=0;
    int h1=0;
    for(int i =1;i<=n;i++){
        if(color[i] == 1){
            cnt1++;
            h1 += adj[i].size();
        }
        else{
            cnt2++;
        }
    }
    cout << cnt1 * cnt2 -h1 << "\n";



}

signed main() {
    fastIO();
    fileIO();
    solve();
    return 0;
}